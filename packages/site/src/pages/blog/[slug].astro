---
import { type CollectionEntry, getCollection } from 'astro:content'
import { onlyFinalPosts } from '../../content/config'
import Layout from '../../layouts/Layout.astro'
import Categories from '../../components/Categories.astro'
import Markdown from '../../components/Markdown.astro'
import IconContainer from '../../components/IconContainer.astro'
import CommentList from '../../components/comments/CommentList.svelte'

export async function getStaticPaths() {
	const blogCollection = await getCollection('blog', onlyFinalPosts)
	return blogCollection.map((post) => ({
		params: { slug: post.slug },
		props: { post }
	}))
}

type Props = {
	post: CollectionEntry<'blog'>
}

const { post } = Astro.props
const {
	Content,
	remarkPluginFrontmatter: { readingTime }
} = await post.render()
---

<Layout title={post.data.title}>
	<Markdown>
		<div slot="header">
			<div class="mb-8">
				<a class="group cursor-pointer flex items-center space-x-4" href="/blog">
					<IconContainer iconName="chevron-back" />
					<span class="text-lg text-zinc-500 group-hover:text-zinc-400 transition">
						Back to Blog Posts
					</span>
				</a>
			</div>
			<Categories categories={post.data.categories} />
			<div class="mt-8 border-l-2 border-zinc-500 pl-4">
				<time class="text-zinc-500" datetime={post.data.date.toISOString()}>
					{
						post.data.date.toLocaleDateString('en-US', {
							month: 'long',
							day: 'numeric',
							year: 'numeric'
						})
					}
				</time>
				<p class="text-zinc-500">{readingTime}</p>
			</div>
		</div>
		<Content slot="content" />
	</Markdown>

	<CommentList client:visible blogId={post.slug} />
</Layout>
